Le CTRL + C doit faire comme bash 
- Afficher "^C" (FAIT)
- Supprimer le message en cours
- gere le cas exit | exit 32 (32 n'etant qu'un exemple)
- 2 warnings le 24/12/2021 a 16h :
      > srcs/api/readline/ms_readline.c:15:23: warning: unused parameter 'master' [-Wunused-parameter]
        void    exiter(t_master *master, char **raw_args)
      > srcs/api/readline/ms_readline.c:15:23: warning: unused parameter 'master' [-Wunused-parameter]
        void    exiter(t_master *master, char **raw_args)

- tglory :
  heredoc -> ctrl C ne marche pas et le 2eme CTRL D fait un segfault
  TODO add mechanic: echo '$USER' -> should print -> $USER and not tglory (idea: replace '$USER' with '\$USER' in ft_split_ultime)
  fix echo t"$USER" -> sould print -> ttglory and not "tglory
  faire le CTRL + \ dans un fork & annuler l'action dans le process principal

- mrozniec :
  gerer les cd ~
  test qui ne marche pas comme dans bash (surtout un rappel pour moi cette partie):
	< test ""

- sylducam
  finish norming
    > recheck all but especially :
      ft_split_ultimate.c

Minishells imbriques
Problemes :
Exemple 1 :
1 - on lance un minishell dans un minishell (2 minishells imbriques)
2 - on fait ctrl-c
3 - on ecrit exit
Resultat : - presque impossible d'ecrire exit
           - ctrl-d, par contre, marche bien. Il quitte les 2 minishells d'un coup
Exemple 2 :
1 - on lance un minishell dans un minishell dans un minishell (3 minishells imbriques)
2 - on fait ctrl-c
3.1 - on ecrit exit
3.2 - 
--------------------------------------------------------------------------------
SIGNAUX
https://man7.org/linux/man-pages/man2/sigaction.2.html

les codes retour
virer les coms
recherche de leaks
mettre la libft a la racine
faire mise a la norme

notes utiles pour moi dans mon repo minishell sur mon github
if you need anything from your sylducams_desk, I pushed it to usefull_stuff
on 202112241727

---------------------------------END OF sylducam's notes------------------------